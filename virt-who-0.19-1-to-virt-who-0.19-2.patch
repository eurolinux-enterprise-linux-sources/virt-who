diff --git a/rel-eng/packages/virt-who b/rel-eng/packages/virt-who
index 17483df..b4ab712 100644
--- a/rel-eng/packages/virt-who
+++ b/rel-eng/packages/virt-who
@@ -1 +1 @@
-0.19-1 ./
+0.19-2 ./
diff --git a/rel-eng/releasers.conf b/rel-eng/releasers.conf
index 8db3227..9be0abc 100644
--- a/rel-eng/releasers.conf
+++ b/rel-eng/releasers.conf
@@ -10,6 +10,14 @@ required_bz_flags = rhel-7.2.0+
 # are found in the changelog.
 #placeholder_bz = 1109810
 
+[rhel-7.4]
+releaser = tito.release.DistGitReleaser
+branches = rhel-7.4
+required_bz_flags = rhel-7.4.0+
+# Change this if you wish to use a placeholder "rebase" bug if none
+# are found in the changelog.
+placeholder_bz = 1429752
+
 #[copr-dgoodwin]
 #releaser = tito.release.CoprReleaser
 #project_name = virt-who
diff --git a/rel-eng/tito.props b/rel-eng/tito.props
index eab3f19..2ebe8b7 100644
--- a/rel-eng/tito.props
+++ b/rel-eng/tito.props
@@ -1,5 +1,5 @@
 [buildconfig]
-builder = tito.builder.Builder
-tagger = tito.tagger.VersionTagger
+builder = tito.distributionbuilder.DistributionBuilder
+tagger = tito.tagger.ReleaseTagger
 changelog_do_not_remove_cherrypick = 0
 changelog_format = %s (%ae)
diff --git a/tests/test_util.py b/tests/test_util.py
new file mode 100644
index 0000000..cd95b7d
--- /dev/null
+++ b/tests/test_util.py
@@ -0,0 +1,28 @@
+from mock import patch, MagicMock, PropertyMock
+
+from base import TestBase
+
+from virtwho.util import RequestsXmlrpcTransport
+
+
+class FakeParser(object):
+    def feed(self, arg):
+        self.arg = arg
+
+    def close(self):
+        pass
+
+
+class TestRequestsXmlrpcTransport(TestBase):
+    @patch('requests.Response')
+    def test_use_response_content(self, resp):
+        parser_return_value = [FakeParser(), FakeParser()]
+
+        transport = RequestsXmlrpcTransport('http://localhost')
+        transport.getparser = MagicMock(return_value=parser_return_value)
+
+        p = PropertyMock()
+        type(resp).content = p
+        transport.parse_response(resp)
+
+        assert p.called, 'Response.content should be used instead'
diff --git a/virt-who.spec b/virt-who.spec
index c5721d1..cb08338 100644
--- a/virt-who.spec
+++ b/virt-who.spec
@@ -1,8 +1,12 @@
 %define use_systemd (0%{?fedora} && 0%{?fedora} >= 18) || (0%{?rhel} && 0%{?rhel} >= 7)
+%if !%{use_systemd}
+%global __python2 %{__python}
+%global python2_sitelib %{python_sitelib}
+%endif
 
 Name:           virt-who
 Version:        0.19
-Release:        1%{?dist}
+Release:        2%{?dist}
 Summary:        Agent for reporting virtual guest IDs to subscription-manager
 
 Group:          System Environment/Base
@@ -123,6 +127,12 @@ fi
 
 
 %changelog
+* Wed Mar 29 2017 Kevin Howell <khowell@redhat.com> 0.19-2
+- 1437229: Fix syntax error in exception handling (pcreech@redhat.com)
+- Update the spec file for builds on more downstream platforms
+  (csnyder@redhat.com)
+- 1437228: Handle utf-8 within Xmlrpc transport (pcreech@redhat.com)
+
 * Thu Mar 02 2017 Christopher Snyder <csnyder@redhat.com> 0.19-1
 - 1415497: Support rhev4 auto detection and usage (pcreech@redhat.com)
 - 1388577: Adding UTF-8 support (pcreech@redhat.com)
diff --git a/virtwho/util.py b/virtwho/util.py
index 70f6667..dfdd471 100644
--- a/virtwho/util.py
+++ b/virtwho/util.py
@@ -49,7 +49,7 @@ class RequestsXmlrpcTransport(xmlrpclib.SafeTransport):
         Parse the xmlrpc response.
         """
         p, u = self.getparser()
-        p.feed(resp.text)
+        p.feed(resp.content)
         p.close()
         return u.close()
 
diff --git a/virtwho/virt/libvirtd/libvirtd.py b/virtwho/virt/libvirtd/libvirtd.py
index 70d867e..f7a9a2e 100644
--- a/virtwho/virt/libvirtd/libvirtd.py
+++ b/virtwho/virt/libvirtd/libvirtd.py
@@ -284,7 +284,7 @@ class Libvirtd(Virt):
             elif self.config.hypervisor_id == 'hostname':
                 self._host_uuid = self.virt.getHostname()
             else:
-                raise virt.VirtError(
+                raise VirtError(
                     'Invalid option %s for hypervisor_id, use one of: uuid, or hostname' %
                     self.config.hypervisor_id)
         return self._host_uuid
