commit 4f85287ae95f427e5a1b7f95a6a75da4dd8da50b
Author: Radek Novacek <rnovacek@redhat.com>
Date:   Tue Mar 24 12:55:52 2015 +0100

    esx: use proxy parameter instead of overriding transport class

diff --git a/tests/test_esx.py b/tests/test_esx.py
index f9c33e2..fae1a97 100644
--- a/tests/test_esx.py
+++ b/tests/test_esx.py
@@ -50,7 +50,7 @@ class TestEsx(TestBase):
         self.run_once()
 
         self.assertTrue(mock_client.called)
-        mock_client.assert_called_with(ANY, location="https://localhost/sdk", cache=None, transport=ANY)
+        mock_client.assert_called_with(ANY, location="https://localhost/sdk", cache=None)
         mock_client.service.RetrieveServiceContent.assert_called_once()
         mock_client.service.Login.assert_called_once()
 
@@ -71,6 +71,6 @@ class TestEsx(TestBase):
         self.run_once()
 
         self.assertTrue(mock_client.called)
-        mock_client.assert_called_with(ANY, location="https://localhost/sdk", transport=ANY)
+        mock_client.assert_called_with(ANY, location="https://localhost/sdk")
         mock_client.service.RetrieveServiceContent.assert_called_once()
         mock_client.service.Login.assert_called_once()
diff --git a/virt/esx/esx.py b/virt/esx/esx.py
index a21b418..63778d5 100644
--- a/virt/esx/esx.py
+++ b/virt/esx/esx.py
@@ -21,7 +21,6 @@ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 import os
 import sys
 import suds
-from suds.transport.http import HttpTransport as SudsHttpTransport
 import logging
 from datetime import datetime
 from urllib2 import URLError
@@ -30,15 +29,6 @@ from collections import defaultdict
 
 import virt
 
-class WellBehavedHttpTransport(SudsHttpTransport):
-    """
-    HttpTransport which properly obeys the ``*_proxy`` environment variables.
-
-    Taken from https://gist.github.com/rbarrois/3721801
-    """
-    def u2handlers(self):
-        return []
-
 
 class Esx(virt.Virt):
     CONFIG_TYPE = "esx"
@@ -170,15 +160,21 @@ class Esx(virt.Virt):
         Log into ESX
         """
 
+        kwargs = {}
+        for env in ['https_proxy', 'HTTPS_PROXY', 'http_proxy', 'HTTP_PROXY']:
+            if env in os.environ:
+                self.logger.debug("ESX module using proxy: %s" % os.environ[env])
+                kwargs['proxy'] = {'https': os.environ[env]}
+                break
+
         # Connect to the vCenter server
         if self.config.esx_simplified_vim:
             wsdl = 'file://%s/vimServiceMinimal.wsdl' % os.path.dirname(os.path.abspath(__file__))
-            kwargs = {'cache': None}
+            kwargs['cache'] = None
         else:
             wsdl = self.url + '/sdk/vimService.wsdl'
-            kwargs = {}
         try:
-            self.client = suds.client.Client(wsdl, location="%s/sdk" % self.url, transport=WellBehavedHttpTransport(), **kwargs)
+            self.client = suds.client.Client(wsdl, location="%s/sdk" % self.url, **kwargs)
         except URLError as e:
             self.logger.exception("Unable to connect to ESX")
             raise virt.VirtError(str(e))
