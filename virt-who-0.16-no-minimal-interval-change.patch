commit 78ce28bb0b4e09f96cdc0d4f50d144bd85fcc887
Author: Radek Novacek <rnovacek@redhat.com>
Date:   Tue Feb 23 15:19:36 2016 +0100

    Do not change minimal reporting interval by interval option

diff --git a/manager/subscriptionmanager/subscriptionmanager.py b/manager/subscriptionmanager/subscriptionmanager.py
index efa97bb..42d77fe 100644
--- a/manager/subscriptionmanager/subscriptionmanager.py
+++ b/manager/subscriptionmanager/subscriptionmanager.py
@@ -195,7 +195,7 @@ class SubscriptionManager(Manager):
         except BadStatusLine:
             raise ManagerError("Communication with subscription manager interrupted")
         except rhsm_connection.RateLimitExceededException as e:
-            retry_after = int(getattr(e, 'headers', {}).get('Retry-After'))
+            retry_after = int(getattr(e, 'headers', {}).get('Retry-After', '60'))
             raise ManagerThrottleError(retry_after)
         except rhsm_connection.GoneException:
             raise ManagerError("Communication with subscription manager failed: consumer no longer exists")
diff --git a/virtwho.py b/virtwho.py
index 852119c..503c5d0 100644
--- a/virtwho.py
+++ b/virtwho.py
@@ -104,7 +104,7 @@ class VirtWho(object):
         # used for checking if the report changed from last time
         self.last_reports_hash = {}
         # How long should we wait between reports sent to server
-        self.retry_after = max(MinimumSendInterval, options.interval)
+        self.retry_after = MinimumSendInterval
         # This counts the number of responses of http code 429
         # received between successfully sent reports
         self._429_count = 0
@@ -154,7 +154,7 @@ class VirtWho(object):
                 # Success will reset the 429 count
                 if self._429_count > 0:
                     self._429_count = 1
-                    self.retry_after = max(MinimumSendInterval, self.options.interval)
+                    self.retry_after = MinimumSendInterval
 
                 self.logger.debug('Report for config "%s" sent', name)
                 if report.state == AbstractVirtReport.STATE_PROCESSING:
@@ -168,9 +168,9 @@ class VirtWho(object):
         except ManagerThrottleError as e:
             self.queued_reports[name] = report
             self._429_count += 1
-            self.retry_after = max(MinimumSendInterval, self.options.interval, e.retry_after * self._429_count)
+            self.retry_after = max(MinimumSendInterval, e.retry_after * self._429_count)
             self.send_after = time.time() + self.retry_after
-            self.logger.debug('429 received, waiting %s seconds until sending again', e.retry_after)
+            self.logger.debug('429 received, waiting %s seconds until sending again', self.retry_after)
 
     def report_done(self, report):
         name = report.config.name
