diff --git a/rel-eng/packages/virt-who b/rel-eng/packages/virt-who
index c41f781..572c51f 100644
--- a/rel-eng/packages/virt-who
+++ b/rel-eng/packages/virt-who
@@ -1 +1 @@
-0.19-5 ./
+0.19-6 ./
diff --git a/tests/test_subscriptionmanager.py b/tests/test_subscriptionmanager.py
index 901c3d7..82d9fcd 100644
--- a/tests/test_subscriptionmanager.py
+++ b/tests/test_subscriptionmanager.py
@@ -101,30 +101,29 @@ class TestSubscriptionManager(TestBase):
         self.sm.check_report_state(report)
         self.assertEqual(report.state, AbstractVirtReport.STATE_PROCESSING)
 
-        def host_guest(host, guests):
+        def host(host):
             return {
-                'uuid': host,
-                'guestIds': [{'guestId': guest} for guest in guests]
+                'uuid': host
             }
         rhsmconnection.return_value.getJob.return_value = {
             'state': 'FINISHED',
             'resultData': {
                 'failedUpdate': ["failed"],
                 'updated': [
-                    host_guest('123', ['111', '222'])
+                    host('123')
                 ],
                 'created': [
-                    host_guest('456', ['333', '444'])
+                    host('456')
                 ],
                 'unchanged': [
-                    host_guest('789', ['555', '666'])
+                    host('789')
                 ]
             }
         }
         self.sm.logger = MagicMock()
         self.sm.check_report_state(report)
-        # calls: authenticating + checking job status + 3 host guest lines
-        self.assertEqual(self.sm.logger.debug.call_count, 5)
+        # calls: authenticating + checking job status + 1 line about the number of unchanged
+        self.assertEqual(self.sm.logger.debug.call_count, 3)
         self.assertEqual(report.state, AbstractVirtReport.STATE_FINISHED)
 
 
diff --git a/virt-who.spec b/virt-who.spec
index 5378c1c..fa5bf6a 100644
--- a/virt-who.spec
+++ b/virt-who.spec
@@ -6,7 +6,7 @@
 
 Name:           virt-who
 Version:        0.19
-Release:        5%{?dist}
+Release:        6%{?dist}
 Summary:        Agent for reporting virtual guest IDs to subscription-manager
 
 Group:          System Environment/Base
@@ -127,6 +127,10 @@ fi
 
 
 %changelog
+* Fri Jul 21 2017 Christopher Snyder <csnyder@redhat.com> 0.19-6
+- 1458674: Update use of result data to match the new async api
+  (csnyder@redhat.com)
+
 * Wed May 17 2017 Kevin Howell <khowell@redhat.com> 0.19-5
 - 1448267: Fix polling behavior for oneshot, CTRL-C, 429 responses
   (csnyder@redhat.com)
diff --git a/virtwho/manager/subscriptionmanager/subscriptionmanager.py b/virtwho/manager/subscriptionmanager/subscriptionmanager.py
index 82b2a17..8e985b7 100644
--- a/virtwho/manager/subscriptionmanager/subscriptionmanager.py
+++ b/virtwho/manager/subscriptionmanager/subscriptionmanager.py
@@ -247,23 +247,13 @@ class SubscriptionManager(Manager):
             self.logger.debug('Job %s not finished', job_id)
         else:
             # log completed job status
-            resultData = result.get('resultData', {})
-            if not resultData:
+            result_data = result.get('resultData', {})
+            if not result_data:
                 self.logger.warning("Job status report without resultData: %s", result)
                 return
-            for fail in resultData.get('failedUpdate', []):
+            for fail in result_data.get('failedUpdate', []):
                 self.logger.error("Error during update list of guests: %s", str(fail))
-            for updated in resultData.get('updated', []):
-                guests = [x['guestId'] for x in updated['guestIds']]
-                self.logger.debug("Updated host %s with guests: [%s]",
-                                  updated['uuid'],
-                                  ", ".join(guests))
-            for created in resultData.get('created', []):
-                guests = [x['guestId'] for x in created['guestIds']]
-                self.logger.debug("Created host: %s with guests: [%s]",
-                                  created['uuid'],
-                                  ", ".join(guests))
-            self.logger.debug("Number of mappings unchanged: %d", len(resultData.get('unchanged', [])))
+            self.logger.debug("Number of mappings unchanged: %d", len(result_data.get('unchanged', [])))
             self.logger.info("Mapping for config \"%s\" updated", report.config.name)
 
     def uuid(self):
